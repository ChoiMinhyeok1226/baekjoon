import java.io.IOException;
import java.util.Scanner;

public class Main {
    static int front = 0, rear = 0, s = 0;
    static int[] deque = new int[10001];
    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        for (int i = 0; i < n; i++) {
            switch (sc.next()) {
                case "push_front":
                    push_front(sc.nextInt());
                    break;
                case "push_back":
                    push_back(sc.nextInt());
                    break;
                case "pop_front":
                    pop_front();
                    break;
                case "pop_back":
                    pop_back();
                    break;
                case "size":
                    System.out.println(s);
                    break;
                case "empty":
                    isEmpty();
                    break;
                case "front":
                    front();
                    break;
                case "back":
                    back();
                    break;
            }
        }
    }

    static void push_front(int x) {
        front = (front - 1 + 10001) % 10001; // 앞쪽 인덱스를 감소
        deque[front] = x;
        s++;
    }

    static void push_back(int x) {
        rear = (front + s) % 10001; // 뒤쪽 인덱스를 계산
        deque[rear] = x;
        s++;
    }

    static void pop_front() {
        if(s == 0) {
            System.out.println("-1");
        }
        else {
            System.out.println(deque[front]);
            front = (front+1) % 10001;
            s--;
        }
    }
    static void pop_back() {
        if(s == 0) {
            System.out.println("-1");
        }
        else {

            System.out.println(deque[(front + s - 1) % 10001]);
            s--;
        }
    }
    static void isEmpty() {
        if(s == 0) {
            System.out.println("1");
        }
        else {
            System.out.println("0");
        }
    }
    static void front() {
        if(s == 0) {
            System.out.println("-1");
        }
        else {
            System.out.println(deque[front]);
        }
    }

    static void back() {
        if (s == 0) {
            System.out.println("-1");
        } else {
            System.out.println(deque[(front + s - 1) % 10001]); // 정확한 뒤쪽 요소 계산
        }
    }
}
